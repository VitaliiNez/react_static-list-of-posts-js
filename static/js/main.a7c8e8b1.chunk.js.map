{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","getCommentsByID","userId","commentsFromServer","filter","postId","postsFromServer","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"048IAEaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACIH,IAEH,OACD,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACIA,OAGN,qBAAKE,UAAU,oBAAf,SACID,QCdGG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OACP,qBAAKJ,UAAU,cAAf,SACGG,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQU,SAI9B,mCACE,oBAAI,UAAQ,oBAAZ,gCCVOC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBX,EAAgBW,EAAhBX,KAAMC,EAAUU,EAAVV,MAEd,OACE,8BACG,eACD,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,SCLIY,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOZ,EAAyBW,EAAzBX,KAAMI,EAAmBO,EAAnBP,SAAUK,EAASE,EAATF,KAE/B,OACE,sBAAKR,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IACjC,cAAC,EAAD,CAAUH,KAAMA,OAElB,mBAAGR,UAAU,iBAAb,SAA+BD,IAC9BG,GAAe,cAAC,EAAD,CAAaC,SAAUA,QCXhCS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,UCMtB,SAASI,EAAgBC,GACvB,OAAOC,EAAmBC,QAAO,SAAArB,GAAO,OAAIA,EAAQsB,SAAWH,MAC5D,KAGE,IAAMF,EAAQM,EAAgBd,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAZmBO,EAYDL,EAAKK,OAXhBK,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKF,KAAOS,MAC7C,MAWHZ,SAAUW,EAAgBJ,EAAKJ,MAbjC,IAAqBS,KAgBRO,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCtBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a7c8e8b1.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          { name }\n        </strong>\n        {' by '}\n        <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n          { email }\n        </a>\n      </div>\n      <div className=\"CommentInfo__body\">\n        { body }\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  comments.length ? (\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo key={comment.id} comment={comment} />\n      ))}\n    </div>\n  ) : (\n    <>\n      <h4 data-cy=\"NoCommentsMessage\">No comments yet</h4>\n    </>\n  )\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <p>\n      {' Posted by  '}\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    </p>\n  );\n};\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, comments, user } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n        <UserInfo user={user} />\n      </div>\n      <p className=\"PostInfo__body\">{body}</p>\n      {CommentList && <CommentList comments={comments} />}\n    </div>\n  );\n};\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n  || null;\n}\n\nfunction getCommentsByID(userId) {\n  return commentsFromServer.filter(comment => comment.postId === userId)\n  || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByID(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}